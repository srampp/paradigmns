<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.2.2">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'session': '001', 'participant': '', 'Send triggers': 'yes'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="OSF Project ID" updates="None" val="" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="fileList"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="norm" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1707, 960]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[-1,-1,-1]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="SC_experiment" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="SC_task">
      <TextComponent name="text_SC_task">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.16" valType="code"/>
        <Param name="name" updates="None" val="text_SC_task" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="6" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$SC_Stimuli" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if checkForFMRITrigger(self):&amp;#10;    logging.log(level = logging.EXP, msg = 'fMRI trigger')" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
      <CodeComponent name="code_4">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="if ((expInfo[&quot;Send triggers&quot;] === &quot;yes&quot;)) {&amp;#10;    setupTriggers(this, MODE_EXP);&amp;#10;} else {&amp;#10;    setupTriggers(this, MODE_DEV);&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="if expInfo['Send triggers'] == 'yes':&amp;#10;    setupTriggers(self, MODE_EXP)&amp;#10;else:&amp;#10;    setupTriggers(self, MODE_DEV)&amp;#10;    &amp;#10;startTriggers(self)" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_4" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="instruction">
      <TextComponent name="text_Instruction">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_Instruction" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Im Folgenden sehen Sie verschiedene Sätze, bei denen jeweils das letzte Wort fehlt. Bitte ergänzen Sie still das fehlende Wort. Teilweise sehen Sie auch Sätze, die keinen Sinn ergeben. Hier müssen Sie keine Wörter ergänzen. Warten Sie in diesen Fällen einfach ab, bis der nächste sinnvolle Satz erscheint." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_start">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_start" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="sys.path.append(&quot;../Utils/&quot;)&amp;#10;from Triggers import (setupTriggers, closeTriggers, waitForFMRITrigger, checkForFMRITrigger, startTriggers, MODE_EXP, MODE_DEV)&amp;#10;&amp;#10;self = lambda:0&amp;#10;" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
    </Routine>
    <Routine name="end">
      <TextComponent name="text_end">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text_end" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="5" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="constant" val="Ende der Aufgabe" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="closeTriggers(self)" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="instruction"/>
    <LoopInitiator loopType="TrialHandler" name="trials_stimuli">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('SC_Stimuli', 'Astronauten fliegen mit Raketen ins _____.')]), OrderedDict([('SC_Stimuli', 'Nehmen Sie das Baby auf den _____.')]), OrderedDict([('SC_Stimuli', 'Sie kaufte Gemüse und frisches _____.')]), OrderedDict([('SC_Stimuli', 'Suppe isst man mit einem _____.')]), OrderedDict([('SC_Stimuli', 'Xbg rhc hgxgr Jknrhc sp _____.')]), OrderedDict([('SC_Stimuli', 'Xbg rkc vhrmgr mbgn sx mhp _____.')]), OrderedDict([('SC_Stimuli', 'Bg mrkxg h nkxg kn h nsgzg gk _____.')]), OrderedDict([('SC_Stimuli', 'Pbg mgnx xk Rspngc Mkrlr hnr phm Jszmgc _____.')]), OrderedDict([('SC_Stimuli', 'Sie gab ihm einen innigen _____.')]), OrderedDict([('SC_Stimuli', 'Wale und Delfine leben im _____.')]), OrderedDict([('SC_Stimuli', 'Wenn die Lichter ausgehen, ist es _____.')]), OrderedDict([('SC_Stimuli', 'Zur Entscheidung werfen wir eine _____.')]), OrderedDict([('SC_Stimuli', 'Lsknp bhtg tgrc pbhrn _____.')]), OrderedDict([('SC_Stimuli', 'Bg hxg h nghnqx vqxxgr hnr wgllc _____.')]), OrderedDict([('SC_Stimuli', 'Mg qpqhllc ghx msxb gkrmp hnr _____.')]), OrderedDict([('SC_Stimuli', 'Mbgn Sk xbsrpxc S mhnx pkjgxbsnc xk _____.')]), OrderedDict([('SC_Stimuli', 'Vom rostigen Auto blätterte der _____.')]), OrderedDict([('SC_Stimuli', 'Ein Dreieck hat drei  _____.')]), OrderedDict([('SC_Stimuli', 'Beim Sturm brach am Segelboot der _____.')]), OrderedDict([('SC_Stimuli', 'Die Arbeiter rodeten den _____.')]), OrderedDict([('SC_Stimuli', 'S mggn jc jkngc sn h _____.')]), OrderedDict([('SC_Stimuli', 'Kn xbg vghzb xbgrg sp h lkx gk _____.')]), OrderedDict([('SC_Stimuli', 'Zrcsnc vhvsgp jhmg h lkx gk _____.')]), OrderedDict([('SC_Stimuli', 'Lgjknp hrg pkqr, vqx pqchr sp _____.')]), OrderedDict([('SC_Stimuli', 'Zum Geburtstag backe ich einen _____.')]), OrderedDict([('SC_Stimuli', 'Der Hafen liegt in einer stillen _____.')]), OrderedDict([('SC_Stimuli', 'Das kleine Mädchen kämmt seine _____.')]), OrderedDict([('SC_Stimuli', 'Das Gegenteil von drinnen ist  _____.')]), OrderedDict([('SC_Stimuli', 'Sg ckq ghx xkk jqzb ckq msll vg _____.')]), OrderedDict([('SC_Stimuli', &quot;Mbgn sx'p bkx kqx S lsmg xk ghx _____.&quot;)]), OrderedDict([('SC_Stimuli', 'Jc ghtkrsxg gkkr sp _____.')]), OrderedDict([('SC_Stimuli', 'Mbgn xbg lscbx xqrnp crggn ckq _____.')]), OrderedDict([('SC_Stimuli', 'Die Braut trägt ein langes weißes _____.')]), OrderedDict([('SC_Stimuli', 'Die kleine Maus tappte in die _____.')]), OrderedDict([('SC_Stimuli', 'Die Polizei trug kugelsichere _____.')]), OrderedDict([('SC_Stimuli', 'Unsere Plätze sind in der zweiten _____.')]), OrderedDict([('SC_Stimuli', 'H xrshnclg bhp xbrgg _____.')]), OrderedDict([('SC_Stimuli', 'Jc ghtkrsxg jktsg sp _____.')]), OrderedDict([('SC_Stimuli', 'Mbhlgp hnr rklnbsnp lstg sn xbg _____.')]), OrderedDict([('SC_Stimuli', 'Pbg lsmgp xk ghx zbkzklhxg zbsn _____.')]), OrderedDict([('SC_Stimuli', 'Bier kauft man in Dosen oder _____.')]), OrderedDict([('SC_Stimuli', 'Der Bauer geht zum Kühemelken in den _____.')]), OrderedDict([('SC_Stimuli', 'Ein alter Baum hat einen dicken _____.')]), OrderedDict([('SC_Stimuli', 'Vor Schreck entfuhr ihr ein gellender _____.')]), OrderedDict([('SC_Stimuli', 'H vhpgvhll chjg bhp nsng _____.')]), OrderedDict([('SC_Stimuli', 'Xbg knnkpsxg kg snpsrg sp _____.')]), OrderedDict([('SC_Stimuli', 'Xbgrg sp nk pzbkkl kn Phxqrrhc kr _____.')]), OrderedDict([('SC_Stimuli', 'Xk jhmg nqrnlg ckq jsd rgr hnr _____.')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="SC_list1.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials_stimuli" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="SC_task"/>
    <LoopTerminator name="trials_stimuli"/>
    <Routine name="end"/>
  </Flow>
</PsychoPy2experiment>
